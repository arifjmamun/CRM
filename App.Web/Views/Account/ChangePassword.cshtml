@model App.Web.Models.ChangePassword
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewBag.Title = "Change Password";
}
@section AdditionalStyles
{
    <link href="~/vendor/toastr/toastr.min.css" rel="stylesheet" />
}

<div class="card">
    <h6 class="card-header bg-primary">CHANGE PASSWORD</h6>
    <div class="card-block">
        <div class="row">
            @using (Html.BeginForm("ChangePassword", "Account", FormMethod.Post, new { @class = "form-horizontal" }))
            {
                @Html.AntiForgeryToken()
                <div class="form-horizontal">

                    <div class="form-group offset-md-2 col-md-8">
                        @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-sm-3" })
                        <div class="col-sm-6">
                            @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                            @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group offset-md-2 col-md-8">
                        @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label col-sm-3" })
                        <div class="col-sm-6">
                            @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.OldPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group offset-md-2 col-md-8">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-sm-3" })
                        <div class="col-sm-6">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group offset-md-2 col-md-8">
                        @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-sm-3" })
                        <div class="col-sm-6">
                            @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })
                        </div>
                    </div>


                    <div class="form-group offset-md-2 col-md-8">
                        <div class="offset-sm-6 col-sm-3">
                            <button type="submit" class="btn btn-success pull-right"> <span class="fa fa-plus"></span> Confirm </button>
                        </div>
                    </div>
                </div>
            }
            <div class="col-md-3">
                <a href="@Url.Action("Index", "Home")" class="btn btn-info"> <span class="fa fa-chevron-left"></span> Back to Home</a>
            </div>

        </div>
    </div>
</div>

@section Scripts
{
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/vendor/toastr/toastr.min.js"></script>
    <script>
        @if (TempData["Toastr"] != null)
        {
            @Html.Raw(TempData["Toastr"])
        }
    </script>
}